---
- [start]
- [input, "{0}"]  # Favourite animal
- [input, "1"]    # Play the game
- [input, ""]     # Press Enter
- [input, "{1}"]  # Play and fill the knowledge tree
#
# After filling the tree, we can test all the menu items.
#
- - matches
  - "(?is).*1.*Play.*List.*Search.*Calc.*Print.*Exit.*"
  - The program should print the menu

#
# 2. List of all animals
#
- [input, "2"]
- [matches, "{2}", The program should print a list of all animals in alphabetical order.]

#
# 3. Search for an animal
#
- [input, "3"]
- [contains, "Enter the animal", The program should ask for an animals to search.]
- [input, "{3}"]
- [matches, "{4}", The program should print facts about the animal]

#
# 4. Knowledge Tree stats
#
- [input, "4"]
- [contains, "The Knowledge Tree stats", The program should print title for statistics]
- [matches, "(?is).*root node.*{5}.*", "The root node should be {5}"]
- [matches, "(?is).*number of nodes[^\\\\R]*{6}.*", "The total number of nodes should be {6}"]
- [matches, "(?is).*number of animals[^\\\\R]*{7}.*", "The total number of animals should be {7}"]
- [matches, "(?is).*number of statements[^\\\\R]*{8}.*", "The total number of statements should be {8}"]
- [matches, "(?is).*height of the tree[^\\\\R]*{9}.*", "The height of the tree should be {9}"]
- [matches, "(?is).*minimum[^\\\\R]*{10}.*", "The minimum depth should be {10}"]
- [matches, "(?is).*average[^\\\\R]*{11}.*", "The average depth should be {11}"]
